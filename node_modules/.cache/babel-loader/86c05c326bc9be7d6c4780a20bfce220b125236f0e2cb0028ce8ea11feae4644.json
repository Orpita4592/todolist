{"ast":null,"code":"import _slicedToArray from \"E:/web_development/to-do-list/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\web_development\\\\to-do-list\\\\src\\\\components\\\\ToDoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toDoItem(props) {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isClicked = _useState2[0],\n    setIsClicked = _useState2[1];\n  function handleOnClick() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textDecoration: isClicked ? \"line-through\" : \"\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(toDoItem, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\nexport default toDoItem;","map":{"version":3,"names":["React","useState","toDoItem","props","isClicked","setIsClicked","handleOnClick","textDecoration","text"],"sources":["E:/web_development/to-do-list/src/components/ToDoItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction toDoItem(props){\r\n    \r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    function handleOnClick(){\r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={{textDecoration :isClicked ? \"line-through\": \"\"}}>\r\n            <li>{props.text}</li>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default toDoItem;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,QAAQ,CAACC,KAAK,EAAC;EAAA;EAEpB,gBAAkCF,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CG,SAAS;IAAEC,YAAY;EAE9B,SAASC,aAAa,GAAE,CAExB;EAEA,oBACI;IAAK,KAAK,EAAE;MAACC,cAAc,EAAEH,SAAS,GAAG,cAAc,GAAE;IAAE,CAAE;IAAA,uBACzD;MAAA,UAAKD,KAAK,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACnB;AAGd;AAAC,GAdQN,QAAQ;AAgBjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}